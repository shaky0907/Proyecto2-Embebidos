{
  "is_book": false,
  "anchor": "application_notes",
  "file": "README.html",
  "name": "Using CMake in Simics",
  "headings": [
    {
      "level": 1,
      "anchor": "introduction-to-cmake",
      "text": "1 Introduction to CMake"
    },
    {
      "level": 2,
      "anchor": "why-cmake",
      "text": "1.1 Why CMake?"
    },
    {
      "level": 2,
      "anchor": "what-is-cmake",
      "text": "1.2 What is CMake"
    },
    {
      "level": 2,
      "anchor": "the-key-to-understand-cmake-targets",
      "text": "1.3 The key to understand CMake - Targets"
    },
    {
      "level": 1,
      "anchor": "minimum-requirements",
      "text": "2 Minimum requirements"
    },
    {
      "level": 2,
      "anchor": "recommended-version",
      "text": "2.1 Recommended version"
    },
    {
      "level": 1,
      "anchor": "current-limitations",
      "text": "3 Current limitations"
    },
    {
      "level": 1,
      "anchor": "recommendations",
      "text": "4 Recommendations"
    },
    {
      "level": 1,
      "anchor": "working-with-cmake-sources-of-reference",
      "text": "5 Working with CMake: sources of reference"
    },
    {
      "level": 1,
      "anchor": "creating-a-simics-project-with-cmake-support",
      "text": "6 Creating a Simics project with CMake support"
    },
    {
      "level": 1,
      "anchor": "building-modules",
      "text": "7 Building modules"
    },
    {
      "level": 2,
      "anchor": "general-usage",
      "text": "7.1 General usage"
    },
    {
      "level": 2,
      "anchor": "build-modules-using-the-standard-cmake-program",
      "text": "7.2 Build modules using the standard CMake program"
    },
    {
      "level": 2,
      "anchor": "build-modules-using-tiny-gnu-make-wrapper",
      "text": "7.3 Build modules using tiny GNU Make wrapper"
    },
    {
      "level": 2,
      "anchor": "build-modules-using-explicit-invocation-of-generated-build-system",
      "text": "7.4 Build modules using explicit invocation of generated build system"
    },
    {
      "level": 2,
      "anchor": "build-modules-using-your-favourite-ide-that-supports-cmake",
      "text": "7.5 Build modules using your favourite IDE that supports CMake"
    },
    {
      "level": 1,
      "anchor": "testing-modules",
      "text": "8 Testing modules"
    },
    {
      "level": 1,
      "anchor": "more-details-on-how-it-works",
      "text": "9 More details on how it works"
    },
    {
      "level": 1,
      "anchor": "converting-an-existing-gnu-makefile-to-cmakelists-txt",
      "text": "10 Converting an existing GNU Makefile to CMakeLists.txt"
    },
    {
      "level": 2,
      "anchor": "a-makefile-is-using-variable-references",
      "text": "A) Makefile is using variable references"
    },
    {
      "level": 2,
      "anchor": "b-makefile-is-using-wildcard-to-locate-files",
      "text": "B) Makefile is using wildcard to locate files"
    },
    {
      "level": 2,
      "anchor": "c-makefile-is-referencing-files-from-common-code-via-extra_module_vpath",
      "text": "C) Makefile is referencing files from common code via EXTRA_MODULE_VPATH"
    },
    {
      "level": 3,
      "anchor": "c1-makefile-is-not-passing-custom-defines-to-the-common-code",
      "text": "C1) Makefile is not passing custom defines to the common code"
    },
    {
      "level": 3,
      "anchor": "c2-makefile-is-passing-custom-defines-to-the-common-code-or-is-just-referencing-the-headers",
      "text": "C2) Makefile is passing custom defines to the common code, or is just referencing the headers"
    },
    {
      "level": 2,
      "anchor": "d-makefile-is-referencing-files-from-other-modules-via-extra_module_vpath",
      "text": "D) Makefile is referencing files from other modules via EXTRA_MODULE_VPATH"
    },
    {
      "level": 3,
      "anchor": "d1-source-files",
      "text": "D1) Source files"
    },
    {
      "level": 3,
      "anchor": "d2-header-files",
      "text": "D2) Header files"
    },
    {
      "level": 2,
      "anchor": "e-makefile-is-generating-files-based-on-other-files",
      "text": "E) Makefile is generating files based on other files"
    },
    {
      "level": 2,
      "anchor": "f-copy-python-files-from-other-modules",
      "text": "F) Copy python files from other modules"
    },
    {
      "level": 1,
      "anchor": "general-notes-tips-and-tricks",
      "text": "11 General notes / Tips and tricks"
    },
    {
      "level": 2,
      "anchor": "built-in-help-on-cli",
      "text": "11.1 Built-in help on CLI"
    },
    {
      "level": 2,
      "anchor": "use-build-in-cmake-commands-to-stay-portable",
      "text": "11.2 Use build-in CMake commands to stay portable"
    },
    {
      "level": 2,
      "anchor": "keep-things-as-local-and-targeted-as-possible",
      "text": "11.3 Keep things as local and \"targeted\" as possible"
    },
    {
      "level": 2,
      "anchor": "use-the-cmake-api-as-intended",
      "text": "11.4 Use the CMake API as intended"
    },
    {
      "level": 2,
      "anchor": "use-log-level-to-differentiate-messages",
      "text": "11.5 Use log-level to differentiate messages"
    },
    {
      "level": 2,
      "anchor": "tracing-support",
      "text": "11.6 Tracing support"
    },
    {
      "level": 2,
      "anchor": "printf-debugging",
      "text": "11.7 Printf-debugging"
    },
    {
      "level": 2,
      "anchor": "don-t-forget-to-build-static-libraries",
      "text": "11.8 Don't forget to build static libraries"
    },
    {
      "level": 2,
      "anchor": "must-build-with-fpic",
      "text": "11.9 Must build with -fPIC"
    },
    {
      "level": 2,
      "anchor": "to-share-headers-between-modules-create-an-interface-library",
      "text": "11.10 To share headers between modules, create an INTERFACE library"
    },
    {
      "level": 2,
      "anchor": "to-share-files-create-a-static-library",
      "text": "11.11 To share files, create a STATIC library"
    },
    {
      "level": 2,
      "anchor": "set-rpath",
      "text": "11.12 Set RPATH"
    },
    {
      "level": 2,
      "anchor": "setting-properties-per-source-file",
      "text": "11.13 Setting properties per source file"
    },
    {
      "level": 1,
      "anchor": "coverage-with-gcov-lcov",
      "text": "12 Coverage with GCOV/LCOV"
    },
    {
      "level": 2,
      "anchor": "how-it-works",
      "text": "12.1 How it works"
    },
    {
      "level": 2,
      "anchor": "configuration",
      "text": "12.2 Configuration"
    },
    {
      "level": 2,
      "anchor": "example",
      "text": "12.3 Example"
    },
    {
      "level": 1,
      "anchor": "sanitization-with-asan-and-ubsan",
      "text": "13 Sanitization with ASAN and UBSAN"
    },
    {
      "level": 2,
      "anchor": "asan-considerations",
      "text": "13.1 ASAN Considerations"
    },
    {
      "level": 2,
      "anchor": "sanitized-modules-in-cli",
      "text": "13.2 Sanitized modules in CLI"
    },
    {
      "level": 1,
      "anchor": "checking-for-dead-dml-methods",
      "text": "14 Checking for dead DML methods"
    }
  ],
  "children": []
}